//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.04.05 at 10:27:20 PM CEST 
//


package generatedXmlClasses;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for stVasi.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="stVasi">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="PAPI2"/>
 *     &lt;enumeration value="PAPI4"/>
 *     &lt;enumeration value="PVASI"/>
 *     &lt;enumeration value="TRICOLOR"/>
 *     &lt;enumeration value="TVASI"/>
 *     &lt;enumeration value="VASI21"/>
 *     &lt;enumeration value="VASI22"/>
 *     &lt;enumeration value="VASI23"/>
 *     &lt;enumeration value="VASI31"/>
 *     &lt;enumeration value="VASI32"/>
 *     &lt;enumeration value="VASI33"/>
 *     &lt;enumeration value="BALL"/>
 *     &lt;enumeration value="APAP"/>
 *     &lt;enumeration value="PANELS"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "stVasi")
@XmlEnum
public enum StVasi {

    @XmlEnumValue("PAPI2")
    PAPI_2("PAPI2"),
    @XmlEnumValue("PAPI4")
    PAPI_4("PAPI4"),
    PVASI("PVASI"),
    TRICOLOR("TRICOLOR"),
    TVASI("TVASI"),
    @XmlEnumValue("VASI21")
    VASI_21("VASI21"),
    @XmlEnumValue("VASI22")
    VASI_22("VASI22"),
    @XmlEnumValue("VASI23")
    VASI_23("VASI23"),
    @XmlEnumValue("VASI31")
    VASI_31("VASI31"),
    @XmlEnumValue("VASI32")
    VASI_32("VASI32"),
    @XmlEnumValue("VASI33")
    VASI_33("VASI33"),
    BALL("BALL"),
    APAP("APAP"),
    PANELS("PANELS");
    private final String value;

    StVasi(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static StVasi fromValue(String v) {
        for (StVasi c: StVasi.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
